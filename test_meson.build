project('com.github.bcedu.valasimplehttpserver', 'c', 'vala', version: '1.0.0')

gnome = import('gnome')
i18n = import('i18n')

# Set our translation domain
add_project_arguments(
	'-DGETTEXT_PACKAGE="@0@"'.format (meson.project_name()),
	language:'c'
)

# Install files listed in gresources
asresources = gnome.compile_resources(
	'as-resources',
	join_paths('data', 'resources', meson.project_name() + '.gresource.xml'),
	source_dir: 'data',
	c_name: 'as'
)


srcs = files([
    'src/configs/Constants.vala',
    'src/widgets/HeaderBar.vala',
    'src/views/AppView.vala',
    'src/views/InitialView.vala',
    'src/views/SharingView.vala',
    'src/views/ErrorView.vala',
    'src/views/ViewConf.vala',
    'src/controllers/ViewController.vala',
    'src/controllers/AppController.vala',
    'src/Application.vala',
    'src/Window.vala',
    'src/simpleHTTPserver.vala',
    'src/handlers/styles_handler.vala',
    'tests/test.vala',
    'tests/valasimplehttpserver_tests.vala'
])


# Dependences
deps = [
    dependency('gobject-2.0'),
    dependency('glib-2.0'),
    dependency('gtk+-3.0'),
    dependency('granite'),
    dependency('gee-0.8'),
    dependency('libhandy-1'),
    dependency('libqrencode', version: '>=4.0.0'),
    meson.get_compiler('vala').find_library('posix')
]

vala_args = ['--vapidir=' + meson.current_source_dir() + '/src/vapis']

libsoup30_dep = dependency('libsoup-3.0', required : false)
if libsoup30_dep.found()
    add_project_arguments('-D', 'LIBSOUP30', language: 'vala')
    deps += [libsoup30_dep]
else
    deps += [dependency('libsoup-2.4')]
endif
# Optional Dependences
libunity_dep = dependency('unity', required : false)
if libunity_dep.found()
    add_project_arguments('-D', 'LIBUNITY', language: 'vala')
    deps += [libunity_dep]
endif

libappindicator_dep = dependency('appindicator3-0.1', required : false)
if libappindicator_dep.found()
    add_project_arguments('-D', 'LIBAPPINDICATOR', language: 'vala')
    deps += [libappindicator_dep]
endif

executable(
    meson.project_name(),
    srcs,
    asresources,
    vala_args: vala_args,
    dependencies: deps,
    install: true
)

subdir('data')

meson.add_install_script('meson/post_install.py')


